//《数据结构（C++版）（第3版）习题解答与实验指导》 作者：叶核亚
//习1.1 复数类

#include "Complex.h"

int main( )
{
	//① C++语言提供默认构造函数。
//    Complex x, y;                                        //执行默认构造函数，注意此时x,y未初始化

	//② C++语言提供默认析构函数，析构函数不能重载。
    //③ C++语言提供默认拷贝构造函数和赋值运算。
    //④ C++语言不提供默认输入流、输出流，需要重载>>、<<运算符。
    //⑤ C++语言不提供默认+=赋值运算，可以重载+=运算符。
    //⑥ C++语言不提供默认关系运算，可以重载==、!=、>、>=、<、<=运算符。
    //（7） Complex类可以重载+、-、*、/等运算符。

    Complex  w=3, x(1,2), y(x), z=x;                       //w=Complex(3), y(x)和z=x执行拷贝构造函数
    cout<<"w"<<w<<", x="<<x<<", y="<<y<<", z="<<z<<"\nx==y?"<<(x==y)<<", x==z?"<<(x==z);
    cout<<"&x="<<&x<<", &y="<<&y<<", &z="<<&z<<endl;
    y+=x;
    cout<<"y+=x, x="<<x<<", y="<<y<<endl;
    z=x+y;                                       //x+y返回创建对象，执行拷贝构造函数，再赋值，z对象地址未变
    cout<<"z=x+y, x="<<x<<", y="<<y<<", z="<<z<<", &z="<<&z<<endl;

    //（8） 两个对象引用同一个实例，使用指针。
    Complex *p=&x;                                     	//两个对象引用同一个实例
    cout<<"*p==x？"<<(*p==x)<<endl;

    system("pause");
    return 0;
}

/*
程序运行结果如下：
w=(3+0i)，x=(1+2i), y=(1+2i), z=(1+2i)
x==y?1, x==z?1&x=0013F89C, &y=0013F884, &z=0013F86C
y+=x, x=(1+2i), y=(2+4i)
z=x+y, x=(1+2i), y=(2+4i), z=(3+6i), &z=0013F86C


*/
