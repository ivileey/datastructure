//堆排序，使用最小堆类
#include "Array.h"                      //数组，包含random(table,N)和print(table,n)函数
#include "MinHeap.h"                             //最小堆类

template <class T>
void heapSort(T table[], int n)                  //数组堆排序（升序），使用最小堆对象，空间复杂度为O(n)
{
    MinHeap<T> minheap(table,n);
    cout<<"最小堆序列："<<minheap;
    for (int i=0; i<n; i++)                      //!minheap.isEmpty()
    {
        table[i] = minheap.removeMin();            //返回最小值元素（根），删除根结点并调整为最小堆
        cout<<"最小堆序列："<<minheap;
    }
    cout<<"堆排序（升序）：";
    print(table, n);
    cout<<endl;
}

int main()
{
    int table3[]={5,31,11,49,90,99,47,87,16};              //最小堆插入和删除测试，第3版图10.6~7
    heapSort(table3, 9);

/*    int table[]={81,49,76,27,97,38,49,13,65};              //堆排序（降序）最小堆，教材图9.11，堆排序算法不稳定
    heapSort(table, 9);

    int table2[]={29,10,25,26,58,12,31,18,47};             //堆排序（升序）最大堆，习题解答习9
    heapSort(table2, 9);
*/

    system("pause");
    return 0;
}
/*
(5)                                                       
(5, 31)
(5, 31, 11)
(5, 31, 11, 49)
(5, 31, 11, 49, 90)
(5, 31, 11, 49, 90, 99)
(5, 31, 11, 49, 90, 99, 47)
(5, 31, 11, 49, 90, 99, 47, 87)
(5, 16, 11, 31, 90, 99, 47, 87, 49)                        //最小堆插入测试，第3版图10.6~7
最小堆序列：(5, 16, 11, 31, 90, 99, 47, 87, 49)            //最小堆删除测试，第3版图10.6~7
最小堆序列：(11, 16, 47, 31, 90, 99, 49, 87)
最小堆序列：(16, 31, 47, 87, 90, 99, 49)
最小堆序列：(31, 49, 47, 87, 90, 99)
最小堆序列：(47, 49, 99, 87, 90)
最小堆序列：(49, 87, 99, 90)
最小堆序列：(87, 90, 99)
最小堆序列：(90, 99)
最小堆序列：(99)
最小堆序列：()
堆排序（升序）：5  11  16  31  47  49  87  90  99  


关键字序列:  81 49 76 27 97 38 49 13 65                    //堆排序（降序）最小堆，教材图9.11
(81)  
(49, 81)  
(49, 81, 76)  
(27, 49, 76, 81)  
(27, 49, 76, 81, 97)  
(27, 49, 38, 81, 97, 76)  
(27, 49, 38, 81, 97, 76, 49)  
(13, 27, 38, 49, 97, 76, 49, 81)  
(13, 27, 38, 49, 97, 76, 49, 81, 65)  
最小堆序列：(13, 27, 38, 49, 97, 76, 49, 81, 65) 
堆排序（升序）： 13 27 38 49 49 65 76 81 97

关键字序列:  29 10 25 26 58 12 31 18 47                    //堆排序（升序）最大堆，习题解答习9
(29)  
(10, 29)  
(10, 29, 25)  
(10, 26, 25, 29)  
(10, 26, 25, 29, 58)  
(10, 26, 12, 29, 58, 25)  
(10, 26, 12, 29, 58, 25, 31)  
(10, 18, 12, 26, 58, 25, 31, 29)  
(10, 18, 12, 26, 58, 25, 31, 29, 47)  
最小堆序列：(10, 18, 12, 26, 58, 25, 31, 29, 47) 
堆排序（升序）： 10 12 18 25 26 29 31 47 58



关键字序列:  57 97 36 12 64 7 31 40 76 61
最小堆序列：(7, 12, 31, 40, 61, 57, 36, 97, 76, 64) 
排序： 7 12 31 36 40 57 61 64 76 97

关键字序列:  48 12 56 18 58 8 57 0 81 41
最小堆序列：(0, 8, 12, 18, 41, 56, 57, 48, 81, 58) 
排序： 0 8 12 18 41 48 56 57 58 81

关键字序列:  89 13 27 40 2 88 59 11 39 37
最小堆序列：(2, 11, 27, 13, 37, 88, 59, 89, 39, 40) 
排序： 2 11 13 27 37 39 40 59 88 89

关键字序列:  18 4 16 0 35 84 48 91 97 2
最小堆序列：(0, 4, 16, 18, 2, 84, 48, 91, 97, 35) 
排序： 0 4 2 16 18 35 48 84 91 97

关键字序列:  49 16 90 87 31 99 47 11 4
最小堆序列：(4, 11, 47, 16, 31, 99, 90, 87, 49) 
排序： 4 11 16 31 47 49 87 90 99


*/
